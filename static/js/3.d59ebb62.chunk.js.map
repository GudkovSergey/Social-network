{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Hoc/withAuthRedirect.js","components/Profile/Profileinfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/MyPhoto.png","components/Profile/Profileinfo/ProfileStatus.js","components/Profile/Profileinfo/ProfileStatusWithHooks.js","components/Profile/Profileinfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/Post/myPosts-container.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","prof","banner","avatar","src","MyPhoto","alt","description","photos","large","Preloader","Post","item","message","countcolor","likecount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","textInput","button","MyPosts","postsElement","postData","map","p","id","dial","inputDialog","mypost","values","addPost","newPostText","posts","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","match","params","autorizedUserId","history","gettUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.d59ebb62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allDialogs\":\"Dialogs_allDialogs__zJ1Lv\",\"dialogs__items\":\"Dialogs_dialogs__items__3CUAU\",\"dialog\":\"Dialogs_dialog__35Sn-\",\"active\":\"Dialogs_active__QVoeZ\",\"allMessages\":\"Dialogs_allMessages__fUQJB\",\"message\":\"Dialogs_message__2GQM_\",\"inputDialog\":\"Dialogs_inputDialog__YGWec\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"ProfileInfo_banner__1jF0O\",\"avatar\":\"ProfileInfo_avatar__1R6Qm\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPosts_mypost__dOTQ3\",\"posts\":\"MyPosts_posts__2k38H\",\"textInput\":\"MyPosts_textInput__3duSH\",\"button\":\"MyPosts_button__386jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1VKxl\",\"countcolor\":\"Post_countcolor__ce3bv\"};","export default __webpack_public_path__ + \"static/media/MyPhoto.d92657c9.png\";","import React from 'react';\r\nimport prof from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activatedEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n\r\n    }\r\n    deActivatedEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    this.props.updateStatus(this.state.status);\r\n    }\r\n     onStatusChange = (e)=>{\r\n       this.setState({\r\n           status: e.currentTarget.value\r\n       });\r\n     }\r\n     componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n     }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activatedEditMode}>{this.props.status|| \"-------\"}</span>\r\n\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange}  autoFocus={true} onBlur={this.deActivatedEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport prof from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n       props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport React from 'react';\r\nimport prof from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport MyPhoto from '../../../assets/MyPhoto.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props)=>{\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={prof.banner}>\r\n                {/*<img src=\"https://ixbt.online/gametech/sadm_images/2009/017/acr/scr.jpg\" alt=\"\"/>*/}\r\n\r\n            </div>\r\n\r\n            <div className={prof.avatar}>\r\n                <img src={MyPhoto} alt=\"\"/>\r\n                <div className={prof.description} >\r\n                    <img src={props.profile.photos.large}/>\r\n\r\n                    <ProfileStatusWithHooks status ={props.status} updateStatus = {props.updateStatus}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n export default ProfileInfo;","import React from 'react';\r\nimport prof from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={prof.item}>\r\n            <img src=\"https://cdn.fishki.net/upload/post/2017/10/05/2397340/tn/photo.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n                <span className={prof.countcolor}> {props.likecount}</span>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport prof from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport dial from \"../../Dialogs/Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required,} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddNewPostForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div >\r\n                < Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} className={prof.textInput}  />\r\n            </div>\r\n\r\n            <div>\r\n                <button className={prof.button}  >Add post</button>\r\n            </div>\r\n\r\n        </form>\r\n    )}\r\n const AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElement = props.postData.map( p => <Post id = {p.id} message = {p.message} key ={p.id} likecount = {p.likecount}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return(\r\n\r\n        <div className={dial.inputDialog}>\r\n            <div className={prof.mypost}>\r\n                My post</div>\r\n          <AddNewPostFormRedux onSubmit ={onAddPost}/>\r\n\r\n            <div className={prof.posts}>\r\n                        {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reduser\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n    let mapStateToProps = (state) =>{\r\n       return {\r\n           postData: state.profilePage.postData,\r\n           newPostText: state.profilePage.newPostText\r\n       }\r\n    }\r\n    let mapDispatchToProps = (dispatch) =>{\r\n       return {\r\n\r\n           addPost: (newPostText)=>{\r\n               dispatch(addPostActionCreator(newPostText))\r\n           }\r\n       }\r\n    }\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/myPosts-container\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return(\r\n\r\n        <div>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer store = {props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n\r\nimport {getStatus, gettUserProfile, updateStatus} from \"../../redux/profile-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.gettUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\nexport default  compose(connect(mapStateToProps, {gettUserProfile, getStatus,updateStatus}), withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}