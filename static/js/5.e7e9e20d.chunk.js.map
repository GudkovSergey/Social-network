{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/Message/Dialogs-container.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","dial","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogsData","map","d","messageElements","messagesData","m","newMessageBody","allDialogs","dialogs__items","allMessages","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,YAAc,6BAA6B,QAAU,yBAAyB,YAAc,+B,oJCGtQC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAEVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAG,eAJT,GAEXC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAoCL,K,kFCD9DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,qBAAKC,UAAWC,IAAKC,OAAS,IAAMD,IAAKE,OAAzC,SACI,cAAC,IAAD,CAAST,GAAII,EAAb,SAAoBL,EAAMW,UCGvBC,EAPC,SAACZ,GACb,OACI,sBAAKO,UAAWC,IAAKK,QAArB,cAAgCb,EAAMa,Y,kCCyCvCC,EAAcC,YAAiB,IAWhCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAVJ,SAACjB,GACrB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,eACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAYC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAkBe,YAAc,yBACzG,8BACI,mDAKDC,EAjDC,SAAC3B,GACZ,IAAIP,EAAQO,EAAM4B,YAEfC,EAAkBpC,EAAMqC,YAAYC,KAAI,SAAAC,GAAC,OACzC,cAAC,EAAD,CAAYrB,KAAQqB,EAAErB,KAAmBL,GAAM0B,EAAE1B,IAAd0B,EAAE1B,OAErC2B,EAAkBxC,EAAMyC,aAAaH,KAAI,SAAAI,GAAC,OAC1C,cAAC,EAAD,CAAStB,QAAWsB,EAAEtB,QAAsBP,GAAM6B,EAAE7B,IAAd6B,EAAE7B,OAGvBb,EAAM2C,eAQ3B,OACI,sBAAK7B,UAAWC,IAAK6B,WAArB,UAEI,qBAAK9B,UAAWC,IAAK8B,eAArB,SACKT,IAGL,sBAAKtB,UAAWC,IAAK+B,YAArB,UACE,8BACKN,IAGJ,cAACjB,EAAD,CAAqBG,SAhBZ,SAACqB,GACjBxC,EAAMyC,YAAYD,EAAOJ,mBAUrB,Y,kCCXGM,sBAAQvC,aAhBD,SAACV,GACnB,MAAO,CACHmC,YAAanC,EAAMmC,gBAKF,SAACe,GACtB,MAAO,CAEHF,YAAa,SAACL,GACVO,EAASC,YAAmBR,SAK6BxC,IAAtD8C,CAAwEf","file":"static/js/5.e7e9e20d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"allDialogs\":\"Dialogs_allDialogs__zJ1Lv\",\"dialogs__items\":\"Dialogs_dialogs__items__3CUAU\",\"dialog\":\"Dialogs_dialog__35Sn-\",\"active\":\"Dialogs_active__QVoeZ\",\"allMessages\":\"Dialogs_allMessages__fUQJB\",\"message\":\"Dialogs_message__2GQM_\",\"inputDialog\":\"Dialogs_inputDialog__YGWec\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport dial from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props)=>{\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={dial.dialog + ' ' + dial.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport dial from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={dial.message}> {props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport dial from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n     let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(d =>\r\n        <DialogItem name = {d.name} key = {d.id} id = {d.id}/>)\r\n\r\n    let messageElements = state.messagesData.map(m =>\r\n        <Message message = {m.message} key = {m.id} id = {m.id}/>\r\n    )\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n\r\n    let  addNewMessage =(values)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={dial.allDialogs}>\r\n\r\n            <div className={dial.dialogs__items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={dial.allMessages}>\r\n              <div>\r\n                  {messageElements}\r\n              </div>\r\n\r\n               <AddMessageFormRedux onSubmit={addNewMessage}/>  {/* отправить форму*/}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n const maxLength50 = maxLengthCreator(50);\r\nconst AddmessageForm  = (props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>  {/* обработать и отправить форму*/}\r\n            <div>\r\n                <Field component ={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\"  placeholder = \"Enter your message\" /></div>\r\n            <div>\r\n                <button> Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: \"DialogAddMessageForm\"})(AddmessageForm)\r\nexport default Dialogs;\r\n","import React from 'react';\r\n\r\nimport Dialogs from \"../Dialogs\";\r\nimport {sendMessageCreator} from \"../../../redux/dialogs-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}